CREATE TABLE xml (
    VERSION TEXT,
    ENCODING TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE DOCTYPE (
    POWERMART TEXT,
    SYSTEM TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE POWERMART (
    CREATION_DATE TEXT,
    REPOSITORY VERSION TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE REPOSITORY (
    NAME TEXT,
    VERSION TEXT,
    CODEPAGE TEXT,
    DATABASETYPE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE FOLDER (
    NAME TEXT,
    GROUP TEXT,
    OWNER TEXT,
    SHARED TEXT,
    DECRIPTION TEXT,
    PERMISSIONS TEXT,
    UUID TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SOURCE (
    ID_ELEMENT_SOURCE INTEGER PRIMARY KEY,
    BUSINESSNAME TEXT,
    DATABASETYPE TEXT,
    DBNAME TEXT,
    DECRIPTION TEXT,
    NAME TEXT,
    OBJECTVERSION TEXT,
    OWNERNAME TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SOURCEFIELD (
    ID_ELEMENT_SOURCEFIELD(AUTO Increment) TEXT,
    BUSINESSNAME TEXT,
    DATATYPE TEXT,
    DESCRIPTION TEXT,
    FIELDNUMBER TEXT,
    FIELDPROPERTY TEXT,
    FIELDTYPE TEXT,
    HIDDEN TEXT,
    KEYTYPE TEXT,
    LENGTH TEXT,
    LEVEL TEXT,
    NAME TEXT,
    NULLABLE TEXT,
    OCCURS TEXT,
    OFFSET TEXT,
    PHYSICALLENGTH TEXT,
    PHYSICALOFFSET TEXT,
    PICTURETEXT TEXT,
    PRECISION TEXT,
    SCALE TEXT,
    USAGE FLAGS TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SOURCEFIELD_SOURCE_JUNCTION (
    ID_ELEMENT_SOURCE INTEGER PRIMARY KEY,
    ID_ELEMENT_SOURCEFIELD INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE TARGET (
    ID_ELEMENT_TARGET INTEGER PRIMARY KEY,
    BUSINESSNAME TEXT,
    CONSTRAINT TEXT,
    DATABASETYPE TEXT,
    DESCRIPTION TEXT,
    NAME TEXT,
    OBJECTVERSION TEXT,
    TABLEOPTIONS TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE TARGETFIELD (
    ID_ELEMENT_TARGETFIELD INTEGER PRIMARY KEY,
    BUSINESSNAME TEXT,
    DATATYPE TEXT,
    DESCRIPTION TEXT,
    FIELDNUMBER TEXT,
    KEYTYPE TEXT,
    NAME TEXT,
    NULLABLE TEXT,
    PICTURETEXT TEXT,
    PRECISION TEXT,
    SCALE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE TARGETFIELD_TARGET_JUNCTION (
    ID_ELEMENT_TARGET INTEGER PRIMARY KEY,
    ID_ELEMENT_TARGETFIELD INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET (
    ID_ELEMENT_MAPPING INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    ISVALID TEXT,
    NAME TEXT,
    OBJECTVERSION TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET_TRANSFORMATION (
    ID_ELEMENT_TRANSFORMATION INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    OBJECTVERSION TEXT,
    REUSABLE TEXT,
    TYPE TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET_TRANSFORMATION_MAPPLET_JUNCTION (
    ID_ELEMENT_MAPPLET INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPLET_TRANSFORMATION INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET_TRANSFORMATION_TRANSFORMFIELD (
    ID_ELEMENT_MAPPLET_TRANSFORMATION_TRANSFORMFIELD INTEGER PRIMARY KEY,
    DATATYPE TEXT,
    DEFAULTVALUE TEXT,
    DESCRIPTION TEXT,
    GROUP TEXT,
    OUTPUTGROUP TEXT,
    NAME TEXT,
    EXPRESSION TEXT,
    PICTURETEXT TEXT,
    PORTTYPE TEXT,
    EXPRESSIONTYPE TEXT,
    PRECISION TEXT,
    SORTDIRECTION TEXT,
    REF_FIELD TEXT,
    SCALE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET_TRANSFORMATION_TRANSFORMFIELD_MAPPLET_TRANSFORMATION_JUNCTION (
    ID_ELEMENT_TRANSFORMATION INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPING_TRANSFORMATION_TRANSFORMFIELD INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET_TRANSFORMATION_TABLEATTRIBUTE (
    ID_ELEMENT_MAPPLET_TRANSFORMATION_TABLEATTRIBUTE INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    VALUE TEXT,
    GROUP TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET_TRANSFORMATION_TABLEATTRIBUTE_TRANSFORMATION_JUNCTION (
    ID_ELEMENT_TRANSFORMATION INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPLET_TRANSFORMATION_TABLEATTRIBUTE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET_INSTANCE (
    ID_ELEMENT_MAPPLET_INSTANCE INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    TRANFORMATION NAME TEXT,
    TRANFORMATION TYPE TEXT,
    TYPE TEXT,
    DBDNAME TEXT,
    REUSABLE TEXT,
    ORDER TEXT,
    USERDEFINED TEXT,
    VALUE TEXT,
    INPUTFIELD TEXT,
    OUTPUTFIELD TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET_INSTANCE_MAPPLET_JUNCTION (
    ID_ELEMENT_MAPPLET INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPLET_INSTANCE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET_CONNECTOR (
    ID_ELEMENT_MAPPLET_CONNECTOR INTEGER PRIMARY KEY,
    FROMFIELD TEXT,
    FROMINSTANCE TEXT,
    FROMINSTANCETYPE TEXT,
    TOFIELD TEXT,
    TOINSTANCE TEXT,
    TOINSTANCETYPE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPLET_CONNECTOR_MAPPING_JUNCTION (
    ID_ELEMENT_MAPPLET INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPLET_CONNECTOR INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING (
    ID_ELEMENT_MAPPING INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    ISVALID TEXT,
    NAME TEXT,
    OBJECTVERSION TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING_TRANSFORMATION (
    ID_ELEMENT_MAPPING_TRANSFORMATION INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    OBJECTVERSION TEXT,
    REUSABLE TEXT,
    TYPE TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING_TRANSFORMATION_MAPPING_JUNCTION (
    ID_ELEMENT_MAPPING INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPING_TRANSFORMATION INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING_INSTANCE (
    ID_ELEMENT_MAPPLET_INSTANCE INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    TRANFORMATION NAME TEXT,
    TRANFORMATION TYPE TEXT,
    TYPE TEXT,
    DBDNAME TEXT,
    REUSABLE TEXT,
    ORDER TEXT,
    USERDEFINED TEXT,
    VALUE TEXT,
    INPUTFIELD TEXT,
    OUTPUTFIELD TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING_INSTANCE_MAPPING_JUNCTION (
    ID_ELEMENT_MAPPING INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPING_INSTANCE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE ASSOCIATED_SOURCE_INSTANCE (
    ID_ELEMENT_ASSOCIATED_SOURCE_INSTANCE INTEGER PRIMARY KEY,
    NAME TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE ASSOCIATED_SOURCE_INSTANCE_INSTANCE_JUNCTION (
    ID_ELEMENT_INSTANCE INTEGER PRIMARY KEY,
    ID_ELEMENT_ASSOCIATED_SOURCE_INSTANCE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING_CONNECTOR (
    ID_ELEMENT_MAPPING_CONNECTOR INTEGER PRIMARY KEY,
    FROMFIELD TEXT,
    FROMINSTANCE TEXT,
    FROMINSTANCETYPE TEXT,
    TOFIELD TEXT,
    TOINSTANCE TEXT,
    TOINSTANCETYPE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING_CONNECTOR_MAPPING_JUNCTION (
    ID_ELEMENT_MAPPING INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPING_CONNECTOR INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE TARGETLOADORDER (
    ID_ELEMENT_TARGETLOADORDER INTEGER PRIMARY KEY,
    ORDER TEXT,
    TARGETINSTANCE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE TARGETLOADORDER_MAPPING_JUNCTION (
    ID_ELEMENT_MAPPING INTEGER PRIMARY KEY,
    ID_ELEMENT_TARGETLOADORDER INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPINGVARIABLE (
    ID_ELEMENT_MAPPINGVARIABLE TEXT,
    AGGFUNCTION TEXT,
    DATATYPE TEXT,
    DEFAULTVALUE TEXT,
    DESCRIPTION TEXT,
    ISEXPRESSIONVARIABLE TEXT,
    ISPARAM TEXT,
    NAME TEXT,
    PRECISION TEXT,
    SCALE TEXT,
    USERDEFINED TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPINGVARIABLE_MAPPING_JUNCTION (
    ID_ELEMENT_MAPPING INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPINGVARIABLE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING_TRANSFORMATION_TRANSFORMFIELD (
    ID_ELEMENT_MAPPING_TRANSFORMATION_TRANSFORMFIELD INTEGER PRIMARY KEY,
    DATATYPE TEXT,
    DEFAULTVALUE TEXT,
    DESCRIPTION TEXT,
    GROUP TEXT,
    OUTPUTGROUP TEXT,
    NAME TEXT,
    EXPRESSION TEXT,
    PICTURETEXT TEXT,
    PORTTYPE TEXT,
    EXPRESSIONTYPE TEXT,
    PRECISION TEXT,
    SORTDIRECTION TEXT,
    REF_FIELD TEXT,
    SCALE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING_TRANSFORMATION_TRANSFORMFIELD_MAPPING_TRANSFORMATION_JUNCTION (
    ID_ELEMENT_TRANSFORMATION INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPING_TRANSFORMATION_TRANSFORMFIELD INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING_TRANSFORMATION_TABLEATTRIBUTE (
    ID_ELEMENT_MAPPING_TRANSFORMATION_TABLEATTRIBUTE INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    VALUE TEXT,
    GROUP TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE MAPPING_TRANSFORMATION_TABLEATTRIBUTE_TRANSFORMATION_JUNCTION (
    ID_ELEMENT_TRANSFORMATION INTEGER PRIMARY KEY,
    ID_ELEMENT_MAPPING_TRANSFORMATION_TABLEATTRIBUTE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE GROUP (
    ID_ELEMENT_GROUP INTEGER PRIMARY KEY,
    NAME TEXT,
    DESCRIPTION TEXT,
    ORDER TEXT,
    TYPE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE GROUP_TRANSFORMATION_JUNCTION (
    ID_ELEMENT_TRANSFORMATION INTEGER PRIMARY KEY,
    ID_ELEMENT_TABLEATTRIBUTE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE INITPROP (
    ID_ELEMENT_INITPROP INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    USERDEFINED TEXT,
    VALUE TEXT,
    OUTGROUP TEXT,
    PICTURETEXT TEXT,
    PORTTYPE TEXT,
    PRECISION TEXT,
    INPUTFIELD TEXT,
    OUTPUTFIELD TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE INITPROP_TRANSFORMATION_JUNCTION (
    ID_ELEMENT_TRANSFORMATION INTEGER PRIMARY KEY,
    ID_ELEMENT_INITPROP INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE FILEDDEPENDENCY (
    ID_ELEMENT_FILEDDEPENDENCY INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE FILEDDEPENDENCY_TRANSFORMATION_JUNCTION (
    ID_ELEMENT_TRANSFORMATION INTEGER PRIMARY KEY,
    ID_ELEMENT_FILEDDEPENDENCY INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE CONFIG (
    ID_ELEMENT_CONFIG INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    ISDEFAULT TEXT,
    NAME TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE CONFIG_ATTRIBUTE (
    ID_ELEMENT_CONFIG_ATTRIBUTE INTEGER PRIMARY KEY,
    NAME TEXT,
    VALUE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE CONFIG_ATTRIBUTE_CONFIG_JUNCTION (
    ID_ELEMENT_CONFIG INTEGER PRIMARY KEY,
    ID_ELEMENT_CONFIG_ATTRIBUTE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE WORKFLOW (
    ID_ELEMENT_WORKFLOW INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    ISENABLED TEXT,
    ISRUNNABLESERVICE TEXT,
    ISSERVICE TEXT,
    ISVALID TEXT,
    NAME TEXT,
    REUSABLE SCHEDULER TEXT,
    SCHEDULERNAME TEXT,
    SERVERNAME TEXT,
    SERVER DOMAINNAME TEXT,
    SUSPEND ON ERROR TEXT,
    TASK MUST RUN ON SERVER TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SCHEDULER (
    ID_ELEMENT_SCHEDULER INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    REUSABLE TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE WORKFLOW_SCHEDULER_JUNCTION (
    ID_ELEMENT_WORKFLOW INTEGER PRIMARY KEY,
    ID_ELEMENT_SCHEDULER INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SCHEDULERINFO (
    ID_ELEMENT_SCHEDULERINFO INTEGER PRIMARY KEY,
    SCHEDULETYPE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SCHEDULERINFO_SCHEDULER_JUNCTION (
    ID_ELEMENT_SCHEDULER INTEGER PRIMARY KEY,
    ID_ELEMENT_SCHEDULERINFO INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE WORKFLOW_TASK (
    ID_ELEMENT_WORKFLOW_TASK INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    REUSABLE TEXT,
    TYPE TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE WORKFLOW_TASK_WORKFLOW_JUNCTION (
    ID_ELEMENT_WORKFLOW INTEGER PRIMARY KEY,
    ID_ELEMENT_WORKFLOW_TASK INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSION (
    ID_ELEMENT_SESSION INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    ISVALID TEXT,
    MAPPINGNAME TEXT,
    NAME TEXT,
    REUSABLE TEXT,
    SORTORDER TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSION_WORKFLOW_JUNCTION (
    ID_ELEMENT_WORKFLOW INTEGER PRIMARY KEY,
    ID_ELEMENT_SESSION INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSTRANSFORMATIONINST (
    ID_ELEMENT_SESSTRANSFORMATIONINST INTEGER PRIMARY KEY,
    ISREPARTITIONPOINT TEXT,
    PIPELINE TEXT,
    SINSTANCENAME TEXT,
    STAGE TEXT,
    TRANSFORMATIONNAME TEXT,
    TRANSFORMATIONTYPE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSTRANSFORMATIONINST_SESSION_JUNCTION (
    ID_ELEMENT_SESSION INTEGER PRIMARY KEY,
    ID_ELEMENT_SESSTRANSFORMATIONINST INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE PARTITION (
    ID_ELEMENT_PARTITION INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE PARTITION_SESSTRANSFORMATIONINST_JUNCTION (
    ID_ELEMENT_SESSTRANSFORMATIONINST INTEGER PRIMARY KEY,
    ID_ELEMENT_PARTITION INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSTRANSFORMATIONGROUP (
    ID_ELEMENT_PARTITION INTEGER PRIMARY KEY,
    GROUP TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSTRANSFORMATIONGROUP_SESSTRANSFORMATIONINST_JUNCTION (
    ID_ELEMENT_SESSTRANSFORMATIONINST INTEGER PRIMARY KEY,
    ID_ELEMENT_SESSTRANSFORMATIONGROUP INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE CONFIGREFERENCE (
    ID_ELEMENT_CONFIGREFERENCE INTEGER PRIMARY KEY,
    REFOBJECTNAME TEXT,
    TYPE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE CONFIGREFERENCE_SESSION_JUNCTION (
    ID_ELEMENT_SESSION INTEGER PRIMARY KEY,
    ID_ELEMENT_CONFIGREFERENCE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE CONFIGREFERENCE_ATTRIBUTE (
    ID_ELEMENT_CONFIGREFERENCE_ATTRIBUTE INTEGER PRIMARY KEY,
    NAME TEXT,
    VALUE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE CONFIGREFERENCE_ATTRIBUTE_CONFIGREFERENCE_JUNCTION (
    ID_ELEMENT_CONFIGREFERENCE INTEGER PRIMARY KEY,
    ID_ELEMENT_CONFIGREFERENCE_ATTRIBUTE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSIONCOMPONENT (
    ID_ELEMENT_SESSIONCOMPONENT INTEGER PRIMARY KEY,
    REFOBJECTNAME TEXT,
    REUSABLE TEXT,
    TYPE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSIONCOMPONENT_SESSION_JUNCTION (
    ID_ELEMENT_SESSION INTEGER PRIMARY KEY,
    ID_ELEMENT_SESSIONCOMPONENT INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSIONCOMPONENT_TASK (
    ID_ELEMENT_SESSIONCOMPONENT_TASK INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    NAME TEXT,
    REUSABLE TEXT,
    TYPE TEXT,
    VERSIONNUMBER TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSIONCOMPONENT_TASK_SESSIONCOMPONENT_JUNCTION (
    ID_ELEMENT_SESSIONCOMPONENT INTEGER PRIMARY KEY,
    ID_ELEMENT_SESSIONCOMPONENT_TASK INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSIONCOMPONENT_TASK_ATTRIBUTE (
    ID_ELEMENT_SESSIONCOMPONENT_TASK_ATTRIBUTE INTEGER PRIMARY KEY,
    NAME TEXT,
    VALUE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSIONCOMPONENT_TASK_ATTRIBUTE_SESSIONCOMPONENT_TASK_JUNCTION (
    ID_ELEMENT_SESSIONCOMPONENT_TASK INTEGER PRIMARY KEY,
    ID_ELEMENT_SESSIONCOMPONENT_TASK_ATTRIBUTE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSIONEXTENSION (
    ID_ELEMENT_SESSIONEXTENSION INTEGER PRIMARY KEY,
    DSQINSTNAME TEXT,
    DSQINSTTYPE TEXT,
    NAME TEXT,
    SINSTANCENAME TEXT,
    SUBTYPE TEXT,
    TRANSFORMATIONTYPE TEXT,
    TYPE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSIONEXTENSION_SESSION_JUNCTION (
    ID_ELEMENT_SESSION INTEGER PRIMARY KEY,
    ID_ELEMENT_SESSIONEXTENSION INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSION_ATTRIBUTE (
    ID_ELEMENT_SESSION_ATTRIBUTE INTEGER PRIMARY KEY,
    NAME TEXT,
    VALUE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE SESSION_ATTRIBUTE_SESSION_JUNCTION (
    ID_ELEMENT_SESSION INTEGER PRIMARY KEY,
    ID_ELEMENT_SESSION_ATTRIBUTE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE TASKINSTANCE (
    ID_ELEMENT_TASKINSTANCE INTEGER PRIMARY KEY,
    DESCRIPTION TEXT,
    FAIL_PARENT_IF_INSTANCE_DID_NOT_RUN TEXT,
    FAIL_PARENT_IF_INSTANCE_FAILS TEXT,
    ISENABLED TEXT,
    NAME TEXT,
    REUSABLE TEXT,
    TASKNAME TEXT,
    TASKTYPE TEXT,
    TREAT INPUTLINK AS AND TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE TASKINSTANCE_WORKFLOW_JUNCTION (
    ID_ELEMENT_WORKFLOW INTEGER PRIMARY KEY,
    ID_ELEMENT_TASKINSTANCE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE WORKFLOWLINK (
    ID_ELEMENT_WORKFLOWLINK INTEGER PRIMARY KEY,
    CONDITION TEXT,
    FROMTASK TEXT,
    TOTASK TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE WORKFLOWLINK_WORKFLOW_JUNCTION (
    ID_ELEMENT_WORKFLOW INTEGER PRIMARY KEY,
    ID_ELEMENT_WORKFLOWLINK INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE WORKFLOWVARIABLE (
    ID_ELEMENT_WORKFLOWVARIABLE INTEGER PRIMARY KEY,
    DATATYPE TEXT,
    DEFAULTVALUE TEXT,
    DESCRIPTION TEXT,
    ISNULL TEXT,
    ISPERSISTENT TEXT,
    NAME TEXT,
    USERDEFINED TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE WORKFLOWVARIABLE_WORKFLOW_JUNCTION (
    ID_ELEMENT_WORKFLOW INTEGER PRIMARY KEY,
    ID_ELEMENT_WORKFLOWVARIABLE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE WORKFLOW_ATTRIBUTE (
    ID_ELEMENT_WORKFLOW_ATTRIBUTE INTEGER PRIMARY KEY,
    NAME TEXT,
    VALUE TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE WORKFLOW_ATTRIBUTE_WORKFLOW_JUNCTION (
    ID_ELEMENT_WORKFLOW INTEGER PRIMARY KEY,
    ID_ELEMENT_WORKFLOW_ATTRIBUTE INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE CONWFRUNINFO (
    ID_ELEMENT_CONWFRUNINFO INTEGER PRIMARY KEY,
    CONWFPARAMFILE TEXT,
    CONWFRUNINSTNAME TEXT,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);

CREATE TABLE CONWFRUNINFO_WORKFLOW_JUNCTION (
    ID_ELEMENT_WORKFLOW INTEGER PRIMARY KEY,
    ID_ELEMENT_CONWFRUNINFO INTEGER PRIMARY KEY,
    workflow_xml_file_path TEXT,
    workflow_xml_file_name TEXT
);